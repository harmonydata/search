- Updated API endpoints to use new Weaviate API and implemented improved filter UI with proper numeric range handling
- Fixed age filter handling to respect API naming differences (age_min/age_max vs age_lower/age_upper) and skip unnecessary filter parameters
- Updated search results to handle new API response format with schema.org data and added pagination
- Implemented server-side pagination using API offset with 20 results per page and stopped updating filters based on search results
- Added debugging tools to help inspect API responses and state in the developer console
- Temporarily disabled pagination to simplify API integration, showing fixed limit of 20 results
- Updated search results layout with compact cards and implemented result selection to show details in the right panel
- Removed cosine similarity chip from result cards and implemented search debouncing
- Fixed filter panel bug where filters disappeared when clicked by properly managing filter state
- Added time range slider combining start_year and end_year, improved label formatting, and fixed empty query API issue
- Improved label formatting throughout the filter panel to consistently replace underscores with spaces
- Updated numeric filter handling to use proper {field}\_min and {field}\_max parameter format for all numeric ranges
- Added reset filters button and improved search result cards with better title wrapping, keywords as text, variable chips, and image support
- Fixed image loading error by adding cataloguementalhealth.ac.uk to allowed domains in next.config.js
- Enhanced image handling by adding more domains to next.config.js and implementing error handling for dynamic image loading
- Fixed image domain configuration by switching to remotePatterns and improved filter state management to maintain selected filters when switching between filter categories
- Updated result cards according to design: removed borders/backgrounds, made image section wider, aligned images with title, used SquareChip components, and fixed image loading issues
- Made result cards completely borderless according to design requirements
- Fixed result cards to completely remove all borders, including from the ButtonBase component
- Simplified result card implementation by replacing Card with Box component for completely borderless design
- Simplified result card styling to fix box shadow issue with minimal code changes
- Completely removed all box shadows from result cards, using only background color for selection
- Fixed result card background behavior so only selected item has background, and non-selected items only get background on hover
- Fixed image handling to properly display dataset-specific images instead of site logos, especially for Catalogue of Mental Health URLs
- Simplified image handling to just use the provided image URL directly with no unnecessary filtering
- Fixed result card hover effect to apply background color only on hover and for selected items
- Applied minimalist approach to result card styling to ensure background color only appears on hover or for selected items
- Fixed image handling in result cards to use the image directly from the result object instead of catalogues
- Added filtering for malformed HTML keywords in search results and study details to prevent UI issues.
- Updated build verification to use TypeScript check instead of full build to avoid breaking dev server.
- Implemented responsive layout with drawer for study details on smaller screens and fixed scrolling issues.
- Enhanced study details panel with sticky positioning that stays visible while scrolling through search results.
- Updated StudyDetail component to show temporal coverage, sample size, age coverage, study design and resource type from correct API fields.
- Replaced separate Data Access and Item Level Metadata sections with a single horizontally scrollable Data Catalogs view with clickable links to external resources.
- Improved Data Catalog cards with rounded corners and side-by-side layout for logo and text to match design requirements.
- Created a reusable DataCatalogCard component with proper styling featuring a white logo section and slight background color for the text area.
- Improved DataCatalogCard with fixed width, logo moved to right side, and fixed scroll behavior in StudyDetail component.
- Created OrganizationCard component for publishers and funders with optional logo and URL.
- Enhanced StudyDetail with study image display, publisher card, and horizontally scrollable funders section.
- Improved UI: cards only show image section when logo exists; truncated long names; moved study image inline with title; added image to drawer header.
- Enhanced UX by hiding empty sections in StudyDetail, removing data owner section, and only displaying sections with content.
- Improved data catalog URLs to link directly to studies when dataset URL is available with matching domain.
- Added extensive organization logo mapping for UK and international research bodies.
- Enhanced logo resolution utility with support for acronym detection and partial name matching.
- Added debugging info to help troubleshoot organization logo rendering issues.
- Improved handling of funders data, particularly handling space-delimited abbreviation lists from Catalogue of Mental Health, treating each abbreviation as a separate funder with its own card.
- Added specialized heuristics to detect when strings appear to contain multiple abbreviations rather than a single organization name.
- Added support for a wide range of UK and international research funder abbreviations.
- Fixed responsive layout issue by replacing flexbox with CSS Grid to ensure consistent 50-50 column split on desktop view regardless of content or selection state.
- Added LinkPreviewCard component to display rich Open Graph previews for URLs, with support for both standard and compact layouts.
- Created TextWithLinkPreviews utility component that automatically detects URLs in text and renders them as LinkPreviewCard components.
- Implemented OpenGraph metadata API endpoint to fetch and parse metadata from external URLs.
- Enhanced StudyDetail component with automatic link detection in description text and a collapsible "Related Links & Papers" section that displays rich link previews for URLs from dataset identifiers and other sources.
- Added extraction of URLs from dataset identifiers, DOIs, and other URL fields, ensuring no duplication with data catalog links.
- Enhanced the OpenGraph metadata API to properly handle redirects for DOI links and other redirecting URLs, ensuring link previews work correctly for academic citations.
- Added client-side throttling and caching in LinkPreviewCard to deduplicate concurrent requests to the same URL, along with server-side caching in the OpenGraph API, preventing excessive requests to external websites.
- Implemented performance optimizations including lazy loading of link previews with IntersectionObserver, memo-ization of StudyDetail mapping, and deferred rendering of additional links until their container section is expanded.
- Fixed infinite scroll results count reset: properly clears results immediately when any search parameter changes, ensuring accurate result counts.
- Fixed search trigger issue where typing new search terms wouldn't show results until advanced options were changed, by restructuring effect logic and ref updates.
- Fixed offset issue where changing hybrid weight would use new weight but old offset/page, now properly resets to page 1 for all search parameter changes.
- Fixed duplicate results issue in infinite scroll by adding deduplication logic and using prevResults.length instead of closure variable results.length.
- Fixed infinite scroll scroll position reset by moving setHasMoreResults outside of setResults state updater to prevent multiple re-renders.
- Removed client-side sorting in SearchResults component that was causing infinite scroll to reset scroll position, relying on API-provided result order instead.
- Fixed loadMore race condition where duplicate API calls were causing results to be cleared, simplified to only update currentPage and let effect handle API call.
- Added debouncing to hybrid weight slider to prevent multiple searches when dragging (300ms delay), using debouncedHybridWeight in all API calls.
- Separated search parameter changes from page changes: only search parameters (query, filters, config) reset results and go to page 1, page changes for infinite scroll append results without clearing.
