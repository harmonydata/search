1:"$Sreact.fragment"
2:I[82104,["6586","static/js/6586.2e946dbf.js","9197","static/js/9197.61b93e42.js","8378","static/js/8378.a1bea36e.js","2926","static/js/2926.76e4f620.js","8173","static/js/8173.582c8c90.js","1702","static/js/1702.de0c2d51.js","1983","static/js/1983.ec5be3f4.js","7184","static/js/7184.52d31c32.js","7177","static/js/app/layout.e50c3fe1.js"],"default"]
3:I[17146,["6586","static/js/6586.2e946dbf.js","9197","static/js/9197.61b93e42.js","8378","static/js/8378.a1bea36e.js","2926","static/js/2926.76e4f620.js","8173","static/js/8173.582c8c90.js","1702","static/js/1702.de0c2d51.js","1983","static/js/1983.ec5be3f4.js","7184","static/js/7184.52d31c32.js","7177","static/js/app/layout.e50c3fe1.js"],"AuthProvider"]
4:I[63612,["6586","static/js/6586.2e946dbf.js","9197","static/js/9197.61b93e42.js","8378","static/js/8378.a1bea36e.js","2926","static/js/2926.76e4f620.js","8173","static/js/8173.582c8c90.js","1702","static/js/1702.de0c2d51.js","1983","static/js/1983.ec5be3f4.js","7184","static/js/7184.52d31c32.js","7177","static/js/app/layout.e50c3fe1.js"],"SearchProvider"]
5:I[68998,["6586","static/js/6586.2e946dbf.js","9197","static/js/9197.61b93e42.js","8378","static/js/8378.a1bea36e.js","2926","static/js/2926.76e4f620.js","8173","static/js/8173.582c8c90.js","1702","static/js/1702.de0c2d51.js","1983","static/js/1983.ec5be3f4.js","7184","static/js/7184.52d31c32.js","7177","static/js/app/layout.e50c3fe1.js"],"default"]
6:I[98904,["6586","static/js/6586.2e946dbf.js","9197","static/js/9197.61b93e42.js","8378","static/js/8378.a1bea36e.js","2926","static/js/2926.76e4f620.js","8173","static/js/8173.582c8c90.js","1702","static/js/1702.de0c2d51.js","1983","static/js/1983.ec5be3f4.js","7184","static/js/7184.52d31c32.js","7177","static/js/app/layout.e50c3fe1.js"],"default"]
7:I[15244,[],""]
8:I[43866,[],""]
9:I[14046,["6586","static/js/6586.2e946dbf.js","9197","static/js/9197.61b93e42.js","8378","static/js/8378.a1bea36e.js","2926","static/js/2926.76e4f620.js","8173","static/js/8173.582c8c90.js","1702","static/js/1702.de0c2d51.js","1983","static/js/1983.ec5be3f4.js","7184","static/js/7184.52d31c32.js","7177","static/js/app/layout.e50c3fe1.js"],"ToastContainer"]
b:I[86213,[],"OutletBoundary"]
d:I[86213,[],"MetadataBoundary"]
f:I[86213,[],"ViewportBoundary"]
11:I[34835,[],""]
:HL["/search/_next/static/media/47cbc4e2adbc5db9-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/search/_next/static/css/0d5b820fee8240e5.css","style"]
0:{"P":null,"b":"oOvDuJZyQIOPELToyx8Mb","p":"/search","c":["","items","rerunning-patterns-of-members-of-legislative-assembly-in-india-s-state-elections-1985-2018"],"i":false,"f":[[["",{"children":["items",{"children":[["slug","rerunning-patterns-of-members-of-legislative-assembly-in-india-s-state-elections-1985-2018","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/search/_next/static/css/0d5b820fee8240e5.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","meta",null,{"name":"emotion-insertion-point","content":""}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com","crossOrigin":"anonymous"}],["$","link",null,{"rel":"preconnect","href":"https://www.cataloguementalhealth.ac.uk"}],["$","link",null,{"rel":"dns-prefetch","href":"https://harmonydata.ac.uk"}],["$","style",null,{"dangerouslySetInnerHTML":{"__html":"\n            /* Ensure immediate rendering with Roboto and fallbacks */\n            * { \n              font-family: \"Roboto\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif !important;\n              font-display: swap;\n              -webkit-font-smoothing: antialiased;\n              -moz-osx-font-smoothing: grayscale;\n            }\n            body { \n              visibility: visible !important; \n              opacity: 1 !important; \n              margin: 0; \n              padding: 0; \n            }\n          "}}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"children":["$","$L4",null,{"children":[["$","$L5",null,{"sx":{"display":"flex","flexDirection":{"xs":"column","md":"row"}},"children":[["$","$L6",null,{}],["$","$L5",null,{"component":"main","sx":{"flexGrow":1,"ml":{"xs":0,"md":"72px"},"mt":{"xs":"64px","md":0},"minHeight":{"xs":"calc(100vh - 64px)","md":"100vh"},"width":{"xs":"100%","md":"calc(100% - 72px)"}},"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}],["$","$L9",null,{"position":"bottom-right"}]]}]}]}]}]]}]]}],{"children":["items",["$","$1","c",{"children":[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","items","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","rerunning-patterns-of-members-of-legislative-assembly-in-india-s-state-elections-1985-2018","d"],["$","$1","c",{"children":[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","items","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$La",null,["$","$Lb",null,{"children":"$Lc"}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","_ouICmjslyG53Is9FQWzz",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","$Lf",null,{"children":"$L10"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}]]}],false]],"m":"$undefined","G":["$11","$undefined"],"s":false,"S":true}
12:I[53704,["6586","static/js/6586.2e946dbf.js","8378","static/js/8378.a1bea36e.js","2282","static/js/2282.e20001b9.js","5135","static/js/5135.b8bfc30e.js","9387","static/js/9387.65629b75.js","2649","static/js/2649.37ecdd75.js","1857","static/js/1857.a01744c0.js","280","static/js/280.5152a9e2.js","7626","static/js/7626.f9409ee1.js","6387","static/js/app/items/%5Bslug%5D/page.4934bfd6.js"],""]
14:I[77626,["6586","static/js/6586.2e946dbf.js","8378","static/js/8378.a1bea36e.js","2282","static/js/2282.e20001b9.js","5135","static/js/5135.b8bfc30e.js","9387","static/js/9387.65629b75.js","2649","static/js/2649.37ecdd75.js","1857","static/js/1857.a01744c0.js","280","static/js/280.5152a9e2.js","7626","static/js/7626.f9409ee1.js","6387","static/js/app/items/%5Bslug%5D/page.4934bfd6.js"],"default"]
13:Te8c,{"@context":"https://schema.org/","@type":"Dataset","name":"Rerunning Patterns of Members of Legislative Assembly in India's State Elections, 1985-2018","description":"The dataset covers regional assembly or Vidhan Sabha elections in India from 1985-2018. We first divided the data into two sets, pre-delimitation (1985-2007) and post-delimitation (2008-2018). We used the stringdist package in R developed by Van der Loo (2014) to name-match candidates in order to identify which of them reran for the same party in the same seat. The stringdist package offers a uniform interface to a number of well-known string distance measures, such as edit-based, q-gram and heuristics distances. Following an iterative process, we used a combination of Damerau-Levenshtein, q-gram, cosine, jaccard, and Jaro-Winker distances to identify candidates which have rerun for political office. We manually went over a large portion of the data, and corrected for any measurement errors. There were 91260 candidates with 17961 constituency-years in 4424 Vidhan Sabha constituencies for the pre-delimitation period after excluding independents. We further subset the dataset to top four candidates because candidates further down the list rarely received many votes. We were left with 58842 candidates with 17959 constituency-years in 4424 Vidhan Sabha constituencies. We further subset the data to observations where incumbent and/or challenger parties reran for elections in the same seat. We were further left with 20362 candidates with 12310 constituency-years in 4098 Vidhan Sabha constituencies. Out of the 20362 candidates, we have 10920 incumbent party candidates and 9442 challenger party candidates.  Therefore, for the pre-delimitation time period, we have rerunning data for 10920 incumbent party candidates and 9442 challenger party candidates. For the post-delimitation period, there were 27723 candidates with 9096 constituency-years in 4067 Vidhan Sabha constituencies after removing independents and subsetting the dataset to top four candidates. We further subset the data to observations where incumbent and/or challenger parties reran for elections in the same seat. There were 7543 candidates with 4652 constituency-years in 3792 Vidhan Sabha constituencies. Therefore, for the post-delimitation time period, we have rerunning data for 3953 incumbent party candidates and 3590 challenger party candidates.Past research on incumbency in India has identified an incumbency disadvantage using Regression Discontinuity Designs (RDD). We argue, however, that these findings are hampered by selection biases. This is because political parties in India do not renominate all their candidates, nor do they renominate them at random. Political parties in India strategically select candidates from constituencies where they outperformed the state-wide party average. This is true for both incumbent and challenger parties, although the magnitude of the selection effect is greater for challenger parties as they are able to exercise greater discretion over whom to renominate. Moreover, we show that incumbent and challenger party candidates that rerun for elections perform better in comparison to newly selected candidates. Part of this is down to the strategic selection effects on behalf of the political parties. However, the rerunning advantage holds even when we account for the selection effects.","url":"https://harmonydata.ac.uk/search/items/rerunning-patterns-of-members-of-legislative-assembly-in-india-s-state-elections-1985-2018","identifier":["http://dx.doi.org/10.5255/UKDA-SN-854706"],"keywords":["ELECTIONS","ELECTORAL CANDIDATES","LOCAL GOVERNMENT ELECTIONS","INDIA"],"temporalCoverage":"2019-10-01/2020-05-31"}15:Tc9e,The dataset covers regional assembly or Vidhan Sabha elections in India from 1985-2018. We first divided the data into two sets, pre-delimitation (1985-2007) and post-delimitation (2008-2018). We used the stringdist package in R developed by Van der Loo (2014) to name-match candidates in order to identify which of them reran for the same party in the same seat. The stringdist package offers a uniform interface to a number of well-known string distance measures, such as edit-based, q-gram and heuristics distances. Following an iterative process, we used a combination of Damerau-Levenshtein, q-gram, cosine, jaccard, and Jaro-Winker distances to identify candidates which have rerun for political office. We manually went over a large portion of the data, and corrected for any measurement errors. There were 91260 candidates with 17961 constituency-years in 4424 Vidhan Sabha constituencies for the pre-delimitation period after excluding independents. We further subset the dataset to top four candidates because candidates further down the list rarely received many votes. We were left with 58842 candidates with 17959 constituency-years in 4424 Vidhan Sabha constituencies. We further subset the data to observations where incumbent and/or challenger parties reran for elections in the same seat. We were further left with 20362 candidates with 12310 constituency-years in 4098 Vidhan Sabha constituencies. Out of the 20362 candidates, we have 10920 incumbent party candidates and 9442 challenger party candidates.  Therefore, for the pre-delimitation time period, we have rerunning data for 10920 incumbent party candidates and 9442 challenger party candidates. For the post-delimitation period, there were 27723 candidates with 9096 constituency-years in 4067 Vidhan Sabha constituencies after removing independents and subsetting the dataset to top four candidates. We further subset the data to observations where incumbent and/or challenger parties reran for elections in the same seat. There were 7543 candidates with 4652 constituency-years in 3792 Vidhan Sabha constituencies. Therefore, for the post-delimitation time period, we have rerunning data for 3953 incumbent party candidates and 3590 challenger party candidates.Past research on incumbency in India has identified an incumbency disadvantage using Regression Discontinuity Designs (RDD). We argue, however, that these findings are hampered by selection biases. This is because political parties in India do not renominate all their candidates, nor do they renominate them at random. Political parties in India strategically select candidates from constituencies where they outperformed the state-wide party average. This is true for both incumbent and challenger parties, although the magnitude of the selection effect is greater for challenger parties as they are able to exercise greater discretion over whom to renominate. Moreover, we show that incumbent and challenger party candidates that rerun for elections perform better in comparison to newly selected candidates. Part of this is down to the strategic selection effects on behalf of the political parties. However, the rerunning advantage holds even when we account for the selection effects.a:[["$","$L12",null,{"strategy":"beforeInteractive","id":"structured-data","type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"$13"}}],["$","$L14",null,{"study":{"dataset_schema":{"@context":"https://schema.org/","@type":"Dataset","name":"Rerunning Patterns of Members of Legislative Assembly in India's State Elections, 1985-2018","description":"$15","url":["https://beta.ukdataservice.ac.uk/datacatalogue/studies/study?id=854706","https://reshare.ukdataservice.ac.uk/854706"],"keywords":["ELECTIONS","ELECTORAL CANDIDATES","LOCAL GOVERNMENT ELECTIONS","INDIA"],"identifier":["http://dx.doi.org/10.5255/UKDA-SN-854706"],"includedInDataCatalog":[{"@type":"DataCatalog","name":"UK Data Service","url":"https://beta.ukdataservice.ac.uk/datacatalogue/studies/study?id=854706"}],"sponsor":[{"@type":"Organization","name":"Economic and Social Research Council"}],"temporalCoverage":"2019-10-01/2020-05-31"},"extra_data":{"study_design":[],"duration_years":1,"slug":"rerunning-patterns-of-members-of-legislative-assembly-in-india-s-state-elections-1985-2018","source":["ukds"],"language_codes":["en"],"instruments":[],"geographic_coverage":"","num_variables":null,"country_codes":["GB","IN"],"name":"Rerunning Patterns of Members of Legislative Assembly in India's State Elections, 1985-2018","sex":"male","ai_summary":null,"urls":["https://beta.ukdataservice.ac.uk/datacatalogue/studies/study?id=854706","https://reshare.ukdataservice.ac.uk/854706"],"resource_type":"dataset","harmony_id":"ukds/854706","end_year":2020,"genetic_data_collected":false,"data_access":"The UK Data Archive has granted a dissemination embargo. The embargo will end on 01 March 2022 and the data will then be available in accordance with the access level selected.","dois":["http://dx.doi.org/10.5255/UKDA-SN-854706"],"start_year":2019,"uuid":"fa3efaf2a13df220f0e4de85f2c13dc0"},"distance":0,"score":0,"parent":{},"ancestors":[]}}]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
16:Tc9e,The dataset covers regional assembly or Vidhan Sabha elections in India from 1985-2018. We first divided the data into two sets, pre-delimitation (1985-2007) and post-delimitation (2008-2018). We used the stringdist package in R developed by Van der Loo (2014) to name-match candidates in order to identify which of them reran for the same party in the same seat. The stringdist package offers a uniform interface to a number of well-known string distance measures, such as edit-based, q-gram and heuristics distances. Following an iterative process, we used a combination of Damerau-Levenshtein, q-gram, cosine, jaccard, and Jaro-Winker distances to identify candidates which have rerun for political office. We manually went over a large portion of the data, and corrected for any measurement errors. There were 91260 candidates with 17961 constituency-years in 4424 Vidhan Sabha constituencies for the pre-delimitation period after excluding independents. We further subset the dataset to top four candidates because candidates further down the list rarely received many votes. We were left with 58842 candidates with 17959 constituency-years in 4424 Vidhan Sabha constituencies. We further subset the data to observations where incumbent and/or challenger parties reran for elections in the same seat. We were further left with 20362 candidates with 12310 constituency-years in 4098 Vidhan Sabha constituencies. Out of the 20362 candidates, we have 10920 incumbent party candidates and 9442 challenger party candidates.  Therefore, for the pre-delimitation time period, we have rerunning data for 10920 incumbent party candidates and 9442 challenger party candidates. For the post-delimitation period, there were 27723 candidates with 9096 constituency-years in 4067 Vidhan Sabha constituencies after removing independents and subsetting the dataset to top four candidates. We further subset the data to observations where incumbent and/or challenger parties reran for elections in the same seat. There were 7543 candidates with 4652 constituency-years in 3792 Vidhan Sabha constituencies. Therefore, for the post-delimitation time period, we have rerunning data for 3953 incumbent party candidates and 3590 challenger party candidates.Past research on incumbency in India has identified an incumbency disadvantage using Regression Discontinuity Designs (RDD). We argue, however, that these findings are hampered by selection biases. This is because political parties in India do not renominate all their candidates, nor do they renominate them at random. Political parties in India strategically select candidates from constituencies where they outperformed the state-wide party average. This is true for both incumbent and challenger parties, although the magnitude of the selection effect is greater for challenger parties as they are able to exercise greater discretion over whom to renominate. Moreover, we show that incumbent and challenger party candidates that rerun for elections perform better in comparison to newly selected candidates. Part of this is down to the strategic selection effects on behalf of the political parties. However, the rerunning advantage holds even when we account for the selection effects.17:Tc9e,The dataset covers regional assembly or Vidhan Sabha elections in India from 1985-2018. We first divided the data into two sets, pre-delimitation (1985-2007) and post-delimitation (2008-2018). We used the stringdist package in R developed by Van der Loo (2014) to name-match candidates in order to identify which of them reran for the same party in the same seat. The stringdist package offers a uniform interface to a number of well-known string distance measures, such as edit-based, q-gram and heuristics distances. Following an iterative process, we used a combination of Damerau-Levenshtein, q-gram, cosine, jaccard, and Jaro-Winker distances to identify candidates which have rerun for political office. We manually went over a large portion of the data, and corrected for any measurement errors. There were 91260 candidates with 17961 constituency-years in 4424 Vidhan Sabha constituencies for the pre-delimitation period after excluding independents. We further subset the dataset to top four candidates because candidates further down the list rarely received many votes. We were left with 58842 candidates with 17959 constituency-years in 4424 Vidhan Sabha constituencies. We further subset the data to observations where incumbent and/or challenger parties reran for elections in the same seat. We were further left with 20362 candidates with 12310 constituency-years in 4098 Vidhan Sabha constituencies. Out of the 20362 candidates, we have 10920 incumbent party candidates and 9442 challenger party candidates.  Therefore, for the pre-delimitation time period, we have rerunning data for 10920 incumbent party candidates and 9442 challenger party candidates. For the post-delimitation period, there were 27723 candidates with 9096 constituency-years in 4067 Vidhan Sabha constituencies after removing independents and subsetting the dataset to top four candidates. We further subset the data to observations where incumbent and/or challenger parties reran for elections in the same seat. There were 7543 candidates with 4652 constituency-years in 3792 Vidhan Sabha constituencies. Therefore, for the post-delimitation time period, we have rerunning data for 3953 incumbent party candidates and 3590 challenger party candidates.Past research on incumbency in India has identified an incumbency disadvantage using Regression Discontinuity Designs (RDD). We argue, however, that these findings are hampered by selection biases. This is because political parties in India do not renominate all their candidates, nor do they renominate them at random. Political parties in India strategically select candidates from constituencies where they outperformed the state-wide party average. This is true for both incumbent and challenger parties, although the magnitude of the selection effect is greater for challenger parties as they are able to exercise greater discretion over whom to renominate. Moreover, we show that incumbent and challenger party candidates that rerun for elections perform better in comparison to newly selected candidates. Part of this is down to the strategic selection effects on behalf of the political parties. However, the rerunning advantage holds even when we account for the selection effects.18:Tc9e,The dataset covers regional assembly or Vidhan Sabha elections in India from 1985-2018. We first divided the data into two sets, pre-delimitation (1985-2007) and post-delimitation (2008-2018). We used the stringdist package in R developed by Van der Loo (2014) to name-match candidates in order to identify which of them reran for the same party in the same seat. The stringdist package offers a uniform interface to a number of well-known string distance measures, such as edit-based, q-gram and heuristics distances. Following an iterative process, we used a combination of Damerau-Levenshtein, q-gram, cosine, jaccard, and Jaro-Winker distances to identify candidates which have rerun for political office. We manually went over a large portion of the data, and corrected for any measurement errors. There were 91260 candidates with 17961 constituency-years in 4424 Vidhan Sabha constituencies for the pre-delimitation period after excluding independents. We further subset the dataset to top four candidates because candidates further down the list rarely received many votes. We were left with 58842 candidates with 17959 constituency-years in 4424 Vidhan Sabha constituencies. We further subset the data to observations where incumbent and/or challenger parties reran for elections in the same seat. We were further left with 20362 candidates with 12310 constituency-years in 4098 Vidhan Sabha constituencies. Out of the 20362 candidates, we have 10920 incumbent party candidates and 9442 challenger party candidates.  Therefore, for the pre-delimitation time period, we have rerunning data for 10920 incumbent party candidates and 9442 challenger party candidates. For the post-delimitation period, there were 27723 candidates with 9096 constituency-years in 4067 Vidhan Sabha constituencies after removing independents and subsetting the dataset to top four candidates. We further subset the data to observations where incumbent and/or challenger parties reran for elections in the same seat. There were 7543 candidates with 4652 constituency-years in 3792 Vidhan Sabha constituencies. Therefore, for the post-delimitation time period, we have rerunning data for 3953 incumbent party candidates and 3590 challenger party candidates.Past research on incumbency in India has identified an incumbency disadvantage using Regression Discontinuity Designs (RDD). We argue, however, that these findings are hampered by selection biases. This is because political parties in India do not renominate all their candidates, nor do they renominate them at random. Political parties in India strategically select candidates from constituencies where they outperformed the state-wide party average. This is true for both incumbent and challenger parties, although the magnitude of the selection effect is greater for challenger parties as they are able to exercise greater discretion over whom to renominate. Moreover, we show that incumbent and challenger party candidates that rerun for elections perform better in comparison to newly selected candidates. Part of this is down to the strategic selection effects on behalf of the political parties. However, the rerunning advantage holds even when we account for the selection effects.e:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Rerunning Patterns of Members of Legislative Assembly in India's State Elections, 1985-2018"}],["$","meta","2",{"name":"description","content":"$16"}],["$","meta","3",{"property":"og:title","content":"Rerunning Patterns of Members of Legislative Assembly in India's State Elections, 1985-2018"}],["$","meta","4",{"property":"og:description","content":"$17"}],["$","meta","5",{"property":"og:url","content":"https://harmonydata.ac.uk/search/items/rerunning-patterns-of-members-of-legislative-assembly-in-india-s-state-elections-1985-2018"}],["$","meta","6",{"property":"og:site_name","content":"Academic Resource Discovery"}],["$","meta","7",{"property":"og:locale","content":"en_US"}],["$","meta","8",{"property":"og:image","content":"https://harmonydata.ac.uk/search/harmony.png"}],["$","meta","9",{"property":"og:image:width","content":"1200"}],["$","meta","10",{"property":"og:image:height","content":"630"}],["$","meta","11",{"property":"og:image:alt","content":"Rerunning Patterns of Members of Legislative Assembly in India's State Elections, 1985-2018"}],["$","meta","12",{"property":"og:type","content":"website"}],["$","meta","13",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","14",{"name":"twitter:title","content":"Rerunning Patterns of Members of Legislative Assembly in India's State Elections, 1985-2018"}],["$","meta","15",{"name":"twitter:description","content":"$18"}],["$","meta","16",{"name":"twitter:image","content":"https://harmonydata.ac.uk/search/harmony.png"}],["$","link","17",{"rel":"icon","href":"/search/favicon.ico","type":"image/x-icon","sizes":"16x16"}]]
c:null
